//merge sort
#include<bits/stdc++.h>
using namespace std;
void merge(int a[],int l,int m,int r)
{
	int i, j, k1; 
    int m1 = m - l + 1; 
    int m2 = r - m; 
    int x[m1], y[m2]; 
	for (int k = 0; k < m1; k++) 
	x[k] = a[l + k]; 
    for (int k2 = 0; k2 < m2; k2++) 
    y[k2] = a[m + 1 + k2]; 
	i=0;
	j=0;
	k1=l;//this is 'l' not '1';
	 while (i < m1 && j < m2) { 
        if (x[i] <= y[j]) { 
            a[k1] = x[i]; 
            i++; 
        } 
        else { 
            a[k1] = y[j]; 
            j++; 
        } 
        k1++; 
    }
	 while (i < m1) { 
        a[k1] = x[i]; 
        i++; 
        k1++; 
    } 
	while (j < m2) { 
        a[k1] = y[j]; 
        j++; 
        k1++; 
    } 
}
void mergesort(int a[],int l,int r)
{
	if(l<r)
	{
		int mid=(l+(r-1))/2;
		mergesort(a,l,mid);
		mergesort(a,mid+1,r);
		merge(a,l,mid,r);
	}
}
int main()
{
	int ar[]={12, 11, 13, 5, 6, 7};
	int size=sizeof(ar)/sizeof(ar[0]);
	mergesort(ar,0,size-1);
	int n=10;
	for(int i=0;i<6;i++)
	{
		cout<<ar[i]<<endl;
	}
	return 0;
}
